server {
    listen 80;
    server_name localhost; # Или ваш домен

    # Корень для статики фронтенда (HTML, CSS, JS)
    location / {
        # Указываем путь, куда Nginx копирует файлы из frontend/Dockerfile
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html; # Обслуживать index.html для SPA-подобного поведения
    }

    # Проксирование запросов поиска на бэкенд
    location /search {
        proxy_pass http://backend:8000; # Имя сервиса из docker-compose
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Проксирование запросов на получение файлов на бэкенд
    location /files/ {
        proxy_pass http://backend:8000; # Перенаправляем на корень бэкенда
                                        # FastAPI сам разберет /files/{filename}
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Опционально: увеличить таймауты для больших файлов
        # proxy_connect_timeout       600;
        # proxy_send_timeout          600;
        # proxy_read_timeout          600;
        # send_timeout                600;
    }

     # Опционально: Проксирование health-check эндпоинта
     location /health {
          proxy_pass http://backend:8000/health;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          # Чтобы только внутренняя сеть могла проверять health (если нужно)
          # allow 172.16.0.0/12; # Пример диапазона Docker сети
          # deny all;
     }

    # Отключить логи доступа для статики (опционально)
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    # Обработка ошибок (опционально)
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #     root /usr/share/nginx/html;
    # }
}
