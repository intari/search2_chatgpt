# File: fix_encoding.py
import os
import codecs # –ò—Å–ø–æ–ª—å–∑—É–µ–º codecs –¥–ª—è —è–≤–Ω–æ–≥–æ —É–∫–∞–∑–∞–Ω–∏—è –∫–æ–¥–∏—Ä–æ–≤–æ–∫ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏/–∑–∞–ø–∏—Å–∏
import argparse
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def ensure_utf8_encoding(filename: str, source_encoding: str = 'cp1251') -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–¥–∏—Ä–æ–≤–∫—É —Ñ–∞–π–ª–∞. –ï—Å–ª–∏ –Ω–µ UTF-8, –ø—ã—Ç–∞–µ—Ç—Å—è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ source_encoding.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –±—ã–ª–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è, False –∏–Ω–∞—á–µ.
    """
    is_converted = False
    try:
        # 1. –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∫–∞–∫ UTF-8, —á—Ç–æ–±—ã –Ω–µ —Ç—Ä–æ–≥–∞—Ç—å —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ñ–∞–π–ª—ã
        with codecs.open(filename, "r", encoding='utf-8') as f:
            f.read() # –ü—Ä–æ—Å—Ç–æ —á–∏—Ç–∞–µ–º, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
        logging.debug(f"–§–∞–π–ª {filename} —É–∂–µ –≤ UTF-8.")
        return False # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
    except UnicodeDecodeError:
        # –§–∞–π–ª —Ç–æ—á–Ω–æ –Ω–µ UTF-8, –ø—Ä–æ–±—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–π source_encoding
        logging.info(f"–§–∞–π–ª {filename} –Ω–µ –≤ UTF-8. –ü–æ–ø—ã—Ç–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏–∑ {source_encoding}...")
        try:
            # –ß–∏—Ç–∞–µ–º —Å –∏—Å—Ö–æ–¥–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
            with codecs.open(filename, "r", encoding=source_encoding) as f:
                content = f.read()

            # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ UTF-8
            # –í–∞–∂–Ω–æ: –ò—Å–ø–æ–ª—å–∑—É–µ–º 'w' —Ä–µ–∂–∏–º, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø–∏—à–µ—Ç —Ñ–∞–π–ª
            with codecs.open(filename, "w", encoding='utf-8') as f:
                f.write(content)

            logging.info(f"‚úÖ {filename} —É—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏–∑ {source_encoding} –≤ UTF-8!")
            is_converted = True
        except UnicodeDecodeError:
            # –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–∂–µ –∫–∞–∫ source_encoding
            logging.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å {filename} –∫–∞–∫ {source_encoding} (–ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–∏ —Å UTF-8). –§–∞–π–ª –Ω–µ –∏–∑–º–µ–Ω–µ–Ω.")
        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞ {filename} –∏–∑ {source_encoding}: {e}. –§–∞–π–ª –Ω–µ –∏–∑–º–µ–Ω–µ–Ω.")
    except FileNotFoundError:
        logging.error(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {filename}")
    except Exception as e:
        # –õ–æ–≤–∏–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ —á—Ç–µ–Ω–∏—è –Ω–∞ —ç—Ç–∞–ø–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ UTF-8
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª {filename} –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏/–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")

    return is_converted


def fix_all_files(directory: str, source_encoding: str = 'cp1251') -> None:
    """
    –û–±—Ö–æ–¥–∏—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∏–∑ source_encoding –≤ UTF-8,
    –µ—Å–ª–∏ –æ–Ω–∏ –µ—â–µ –Ω–µ –≤ UTF-8.
    """
    converted_count = 0
    processed_count = 0
    # –°–ø–∏—Å–æ–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    text_extensions = ('.txt', '.md', '.html', '.htm', '.css', '.js', '.json', '.xml', '.csv', '.log', '.srt') # –î–æ–±–∞–≤—å –Ω—É–∂–Ω—ã–µ

    for root, _, files in os.walk(directory):
        for file in files:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
            if file.lower().endswith(text_extensions):
                 filepath = os.path.join(root, file)
                 processed_count += 1
                 if ensure_utf8_encoding(filepath, source_encoding):
                      converted_count += 1
            else:
                 logging.debug(f"–ü—Ä–æ–ø—É—Å–∫ —Ñ–∞–π–ª–∞ —Å –Ω–µ—Ç–µ–∫—Å—Ç–æ–≤—ã–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º: {file}")

    logging.info(f"–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤: {processed_count}. –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –≤ UTF-8: {converted_count}.")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–∏ (–ø–æ —É–º–æ–ª—á. cp1251) –≤ UTF-8.")
    parser.add_argument("directory", type=str, help="–ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏.")
    parser.add_argument(
        "--source-encoding",
        type=str,
        default="cp1251",
        help="–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è –∏—Å—Ö–æ–¥–Ω–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤, –Ω–µ —è–≤–ª—è—é—â–∏—Ö—Å—è UTF-8 (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: cp1251).",
    )
    args = parser.parse_args()

    if not os.path.isdir(args.directory):
        logging.error(f"–£–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π: {args.directory}")
    else:
        logging.info(f"üõ†Ô∏è –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {args.directory}...")
        logging.info(f"–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è –∏—Å—Ö–æ–¥–Ω–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {args.source_encoding}")
        fix_all_files(args.directory, args.source_encoding)
        logging.info("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
